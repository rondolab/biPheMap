for(i in 1:2188){
if(arden$pheno[i] == 2){
if(old$pheno[i] == 1){
aC_nCo <- aC_nCo + 1
}
}
}
controls
case <- 0
for(i in 1:2188){
if(arden$pheno[i] == 2){
if(old$pheno[i] == 2){
case <- case + 1
}
}
}
head(old)
dim(old)
dim(arden)
arden <- read.csv("Documents/BioMe_GSA_Regeneron/arden_ea.txt", sep = "\t", header = TRUE)
head(arden)
dim(arden)
old <- read.csv("~/Documents/BioMe_GSA_Regeneron/Old and New Case-Controls/old_eth_pca.txt", sep = "\t", header = TRUE)
head(old)
dim(old)
arden <- arden[order(arden$FID),]
old <- old[order(old$FID),]
head(arden)
head(old)
index <- which(arden$FID %in% old$FID)
length(index)
arden <- arden[index,]
dim(arden)
dim(old)
controls <- 0
for(i in 1:2053){
if(arden$pheno[i] == 1){
if(old$pheno[i] == 1){
controls <- controls + 1
}
}
}
case <- 0
for(i in 1:2053){
if(arden$pheno[i] == 2){
if(old$pheno[i] == 2){
case <- case + 1
}
}
}
aCo_nC <- 0
for(i in 1:2053){
if(arden$pheno[i] == 1){
if(old$pheno[i] == 2){
aCo_nC <- aCo_nC + 1
}
}
}
aC_nCo <- 0
for(i in 1:2053){
if(arden$pheno[i] == 2){
if(old$pheno[i] == 1){
aC_nCo <- aC_nCo + 1
}
}
}
controls
cases
case
aCo_nC
aC_nCo
arden <- read.csv("Documents/BioMe_GSA_Regeneron/arden_ea.txt", sep = "\t", header = TRUE)
head(arden)
dim(arden)
old <- read.csv("~/Documents/BioMe_GSA_Regeneron/Old and New Case-Controls/old_eth_pca.txt", sep = "\t", header = TRUE)
head(old)
dim(old)
2283-2053
index <- which(arden$FID %in% old$FID)
length(iindex)
length(index)
rden <- read.csv("Documents/BioMe_GSA_Regeneron/arden_ea.txt", sep = "\t", header = TRUE)
head(arden)
dim(arden)
new <- read.csv("~/Documents/BioMe_GSA_Regeneron/Old and New Case-Controls/new_eth_pca.txt", sep = "\t", header = TRUE)
head(new)
dim(new)
arden <- arden[order(arden$FID),]
new <- new[order(new$FID),]
head(arden)
head(new)
index <- which(arden$FID %in% new$FID)
length(index)
dim(arden)
dim(new)
2283-2188
library(TwoSampleMR)
setwd("~/Documents/Mendelian Randomization/TwoSampleMR_rerun/2-14-20_ivw_mre/")
#-----------------------------------------------------------------------------------------------
analysis <- function(exposure_input_id){
#------------------------------------------------------------------------
#Exposure Data
exposure_data <- extract_instruments(outcomes = exposure_input_id,
p1       = 5e-08,
clump    = TRUE,
p2       = 5e-08,
r2       = 0.05)
#------------------------------------------------------------------------
#Outcome Data
outcome_data <- extract_outcome_data(snps          = exposure_data$SNP,
outcomes      = c('ieu-a-7'),
proxies       = 1,
rsq           = 0.8,
align_alleles = 1,
palindromes   = 1,
maf_threshold = 0.05)
#------------------------------------------------------------------------
#Harmonise Data
data <- harmonise_data(exposure_dat = exposure_data,
outcome_dat  = outcome_data)
#------------------------------------------------------------------------
#Perform MR - Primary Analysis
result_mr <- mr(dat         = data,
method_list = mr_method_list()$obj[10])
#------------------------------------------------------------------------
# #Sensitivity Analysis
# heterogeneity <- mr_heterogeneity(dat         = data,
#                                   method_list = c("mr_ivw"))
# #...........
# #Single SNP Analysis
# singleSNP <- mr_singlesnp(dat           = data,
#                           single_method = "mr_ivw")
# #...........
# #Leave-one-out analysis
# leave_one_out <- mr_leaveoneout(dat = data)
#------------------------------------------------------------------------
setwd("~/Documents/Mendelian Randomization/TwoSampleMR_rerun/2-14-20_ivw_mre/")
folder_name <- paste0(unique(exposure_data$id.exposure),"_CAD")
# dir.create(folder_name)
setwd(folder_name)
write.csv(x    = result_mr,
file = paste0(folder_name,"_mre_mr_results",".csv"))
# write.csv(x    = heterogeneity,
#           file = paste0(folder_name,"_heterogeneity",".csv"))
#
# write.csv(x    = singleSNP,
#           file = paste0(folder_name,"_singleSNP",".csv"))
#
# write.csv(x    = leave_one_out,
#           file = paste0(folder_name,"_leave_one_out",".csv"))
}
#-----------------------------------------------------------------------------------------------
#Run the above analysis for all metabolites in Shin dataset
file <- read.csv("~/Documents/Mendelian Randomization/TwoSampleMR_rerun/shin_metabolites_stats.txt",
header = TRUE, sep = "\t")
file$id <- as.character(file$id)
id <- file$id
for (i in 1:length(id)) {
tryCatch(
# This is what I want to do...
{
analysis(id[i])
},
# ... but if an error occurs, tell me what happened:
error=function(error_message) {
message("And below is the error message from R:")
message(error_message)
return(NA)
}
)
}
devtools::install_github("MRCIEU/TwoSampleMR@0.4.26")
library(TwoSampleMR)
install.packages("devtools")
devtools::install_github("MRCIEU/TwoSampleMR")
install.packages("devtools")
devtools::install_github("MRCIEU/TwoSampleMR@0.4.26")
install.packages("devtools")
devtools::install_github("MRCIEU/TwoSampleMR@0.4.26")
library(devtools)
install_github("MRCIEU/TwoSampleMR")
library(vcfR)
file <- read.vcfR("~/Documents/Andrea/PCOS/rawfiles/H_Urbanek_PCOS_WGHum-SeqCustom_160205_1.BEDsuperset.BestPractices.VQSR.vcf")
save(file, file = "~/Documents/Andrea/PCOS/rawfiles/vcf.RData")
vcf <- load("Documents/Andrea/PCOS/rawfiles/vcf.RData")
class(vcf)
library(tidyverse)
list <- read.csv("~/Documents/MR-FINRISK/sorted_list_instruments.txt", sep = " ")
head(list)
list <- read.csv("~/Documents/MR-FINRISK/sorted_list_instruments.txt", sep = " ",header = FALSe)
list <- read.csv("~/Documents/MR-FINRISK/sorted_list_instruments.txt", sep = " ",header = FALSE)
head(list)
write.table(list,"~/Documents/MR-FINRISK/list.txt", quote = FALSE, sep = " ", row.names = FALSE, col.names = FALSE)
length(which(list$V1 >= 3))
library(tidyverse)
library(readxl)
library(stringr)
setwd("~/Documents/BioMe_GSA_Regeneron/")
pad <- as.data.frame(read_excel("Updated Atherosclerosis Events with CAD - Rajiv.xlsx", col_names = TRUE, sheet = 4))
head(pad)
for (i in 1:nrow(pad)) {
if(pad$PRESENCE_PHENOTYPE_EHR_B4_ENRL[i] == "Y" || pad$PRESENCE_PHENOTYPE_AFT_ENRL[i] == "Y"){
pad$presence[i] = 2
}
else{
pad$presence[i] = 1
}
}
head(pad)
pad <- pad[,c(1,7)]
colnames(pad)[2] <- "PAD"
setwd("~/Documents/TOPMED/TOPMED_cohort/")
copd <- read.csv("BioMe_TOPMedCohortDesignInfo.txt", sep = "\t", header = TRUE)
head(copd)
copd$newCOPD[which(copd$COPD == "CONTROL")] <- "1"
copd$newCOPD[which(copd$COPD == "CASE")] <- "2"
copd$newCAD[which(copd$CAD_HARD == "CONTROL")] <- "1"
copd$newCAD[which(copd$CAD_HARD == "CASE")] <- "2"
copd <- copd[,c(1,2,3,9,11,12)]
colnames(copd)[5] <- "COPD"
colnames(copd)[6] <- "CAD_HARD"
dim(copd)
copd <- distinct(copd)
setwd("~/Documents/TOPMED/TOPMED_cohort/")
prs <- read.csv("CAD_GSA_chrAll_PRS_kmeans_all_percents.txt.final", header = TRUE, sep = " ")
prs <- prs[,c(1,2,3,4)]
```{r COPD}
setwd("~/Documents/TOPMED/TOPMED_cohort/")
setwd("~/Documents/TOPMED/TOPMED_cohort/")
copd <- read.csv("BioMe_TOPMedCohortDesignInfo.txt", sep = "\t", header = TRUE)
head(copd)
length(unique(copd$SUBJECT_ID))
length(unique(copd$MASKED_MRN))
length(unique(copd$COLLABORATORSAMPLEID))
cad <- as.data.frame(read_excel("Updated Atherosclerosis Events with CAD - Rajiv.xlsx", col_names = TRUE, sheet = 5))
head(cad)
library(readxl)
library(tidyverse)
m
m
cad <- as.data.frame(read_excel("Updated Atherosclerosis Events with CAD - Rajiv.xlsx", col_names = TRUE, sheet = 5))
head(cad)
setwd("~/Documents/BioMe_GSA_Regeneron/")
cad <- as.data.frame(read_excel("Updated Atherosclerosis Events with CAD - Rajiv.xlsx", col_names = TRUE, sheet = 5))
head(cad)
length(unique(cad$MASKED_MRN))
colnames(copd)
library(tidyverse)
library(readxl)
library(data.table)
library(corrplot)
setwd("~/Documents/Mendelian Randomization/scratch_MR/cath_echo/")
#-----------------
echo <- read.csv("BioMe Echo Data_8.30.2018.csv", header = TRUE, sep = ",")
head(echo)
echo <- echo[,c(1,2,18,19,22,25,13,9,26,27,28)]
dim(echo)
length(unique(echo$MASKED_MRN))
echo <- distinct(echo)
dim(echo)
head(echo)
length(unique(echo$MASKED_MRN))
echo_grp <- echo %>%
group_by(MASKED_MRN) %>%
mutate(TESTDATE=as.Date(TESTDATE, format= "%m/%d/%Y"))%>%
filter(TESTDATE==max(TESTDATE))
dim(echo_grp)
length(unique(echo_grp$MASKED_MRN))
head(echo_grp)
library(tidyverse)
library(readxl)
library(data.table)
library(corrplot)
setwd("~/Documents/Mendelian Randomization/scratch_MR/cath_echo/")
#-----------------
echo <- read.csv("BioMe Echo Data_8.30.2018.csv", header = TRUE, sep = ",")
head(echo)
echo <- echo[,c(1,2,18,19,22,25,13,9,26,27,28)]
dim(echo)
length(unique(echo$MASKED_MRN))
echo <- distinct(echo)
dim(echo)
head(echo)
length(unique(echo$MASKED_MRN))
lDf <- split(echo, echo$MASKED_MRN)
lDf[[1]]
View(lDf)
lDf[["1160"]]
nrow)ldf[[1]]
nrow(lDf[[1]])
nrow(lDf[[2]])
lDf[[2]]
rbind(lDf[[1]], lDf[[2]])
#Combining the split data for which nrow = 1
echo_single_date <- data.frame()
for(i in 1:length(lDf)){
if(nrow(lDf[[i]]) == 1){
echo_single_date <- rbind(echo_single_date, lDf[[i]])
}
}
head(echo_single_date)
dim(echo_single_date)
setwd("~/Documents/BioMe_GSA_Regeneron/")
cad <- as.data.frame(read_excel("Updated Atherosclerosis Events with CAD - Rajiv.xlsx", col_names = TRUE, sheet = 5))
pad <- as.data.frame(read_excel("Updated Atherosclerosis Events with CAD - Rajiv.xlsx", col_names = TRUE, sheet = 4))
length(which(cad$MASKED_MRN %in% pad$MASKED_MRN))
lDf[[1]]
lDf[[2]]
lDf[[3]]
lDf[[4]]
lDf[[5]]
lDf[[6]]
lDf[[6]][order(as.Date(lDf[[6]]$TESTDATE, format="%m/%d/%Y")),]
lDf[[6]][order(-as.Date(lDf[[6]]$TESTDATE, format="%m/%d/%Y")),]
lDf[[6]][order(-as.Date(lDf[[6]]$TESTDATE, format="%m/%d/%Y"), decreasing = TRUE),]
lDf[[6]][order(as.Date(lDf[[6]]$TESTDATE, format="%m/%d/%Y"), decreasing = TRUE),]
View(echo)
lDf[[6]][1,]
lDf[[6]][1,]$MASKED_MRN
x <- lDf[[i]][1,]
x
lDf[["2576"]]
lDf[["5211"]]
lDf[["11607298"]][3,]
View(echo)
lDf[["11607298"]][1,]
is.na(lDf[["11607298"]][1,]$LVDIAMETERDIASTOLE)
is.na(lDf[["11607298"]][1,]$LVDIAMETERDIASTOLE & lDf[["11607298"]][1,]$LVDIAMETERSYSTOLE)
is.na(lDf[["11607298"]][1,]$LVDIAMETERDIASTOLE & lDf[["11607298"]][1,]$MASKED_MRN)
setwd("~/Documents/TOPMED/TOPMED_cohort/")
copd <- read.csv("BioMe_TOPMedCohortDesignInfo.txt", sep = "\t", header = TRUE)
length(which(copd$MASKED_MRN %in% pad$MASKED_MRN))
length(unique(copd$MASKED_MRN))
x <- copd$MASKED_MRN
x <- distinct(x)
x <- unique(x)
length(x)
length(which(x %in% pad$MASKED_MRN))
head(copd)
length(x)
length(copd$MASKED_MRN)
length(unique(copd$MASKED_MRN))
colnameslength(unique(copd$SUBJECT_ID))
length(unique(copd$SUBJECT_ID))
table(copd$RACE_OMRI)
ans <- read.csv("TOPMed_BioMe_NewAncestry.txt", header = TRUE)
head(ans)
ans <- read.csv("TOPMed_BioMe_NewAncestry.txt", header = TRUE, sep = "\t")
table(ans$NewAncestry)
#-----------------
#For split data with nrow > 1; taking the most recent date for each MASKED_MRN
echo_multiple_date <- data.frame()
for(i in 1:length(lDf)){
if(nrow(lDf[[i]]) > 1){
lDf[[i]] <- lDf[[i]][order(as.Date(lDf[[i]]$TESTDATE, format="%m/%d/%Y"), decreasing = TRUE),]
x <- lDf[[i]][1,]
if(is.na(x$LVDIAMETERDIASTOLE) & is.na(x$LVDIAMETERSYSTOLE) & is.na(x$ENDDIASTOLICVOLBIPLANE)
& is.na(x$ENDSYSTOLICVOLBIPLANE) & is.na(x$EERATIO)
& is.na(x$STROKEVOL4CH) & is.na(x$STROKEVOL2CH) & is.na(x$STROKEVOLBIPLANE)){
echo_multiple_date <- rbind(echo_multiple_date, lDf[[i]][2,])
}
else{
echo_multiple_date <- rbind(echo_multiple_date, x)
}
}
}
dim(echo_multiple_date)
dim(echo_single_date)
5374+5351
head(cad)
head(copd)
head(ans)
length(unique(ans$SUBJECT_ID))
length(unique(copd$SUBJECT_ID))
length(which(copd$SUBJECT_ID %in% ans$SUBJECT_ID))
View(table(ans$SUBJECT_ID))
View(table(copd$SUBJECT_ID))
View(copd)
echo_final <- rbind(echo_single_date,echo_multiple_date)
head(echo_final)
View(echo_final)
View(echo)
head(echo_final)
summary(echo_final)
hist(echo_final$LVDIAMETERDIASTOLE,  xlim = range(echo_final$LVDIAMETERDIASTOLE),
xlab = "LV DIAMETER DIASTOLE", main = "HISTOGRAM OF LV DIAMETER DIASTOLE")
hist(echo_final$LVDIAMETERDIASTOLE,
xlab = "LV DIAMETER DIASTOLE", main = "HISTOGRAM OF LV DIAMETER DIASTOLE")
boxplot(echo_final$LVDIAMETERDIASTOLE, xlab = "LV DIAMETER DIASTOLE", main = "BOXPLOT OF LV DIAMETER DIASTOLE")
setwd("~/Documents/Mendelian Randomization/scratch_MR/cath_echo/")
hist(echo_final$LVDIAMETERSYSTOLE,
xlab = "LV DIAMETER SYSTOLE", main = "HISTOGRAM OF LV DIAMETER SYSTOLE")
boxplot(echo_final$LVDIAMETERSYSTOLE, xlab = "LV DIAMETER SYSTOLE", main = "BOXPLOT OF LV DIAMETER SYSTOLE")
hist(echo_final$ENDDIASTOLICVOLBIPLANE,
xlab = "END DIASTOLIC VOL BIPLANE", main = "HISTOGRAM OF END DIASTOLIC VOL BIPLANE")
hist(echo_final$ENDDIASTOLICVOLBIPLANE,
xlab = "END DIASTOLIC VOL BIPLANE", breaks = 50,main = "HISTOGRAM OF END DIASTOLIC VOL BIPLANE")
boxplot(echo_final$ENDDIASTOLICVOLBIPLANE, xlab = "END DIASTOLIC VOL BIPLANE", main = "BOXPLOT OF END DIASTOLIC VOL BIPLANE")
hist(echo_final$ENDSYSTOLICVOLBIPLANE,
xlab = "END SYSTOLIC VOL BIPLANE", breaks = 50,main = "HISTOGRAM OF END SYSTOLIC VOL BIPLANE")
boxplot(echo_final$ENDSYSTOLICVOLBIPLANE, xlab = "END SYSTOLIC VOL BIPLANE", main = "BOXPLOT OF END SYSTOLIC VOL BIPLANE")
head(echo_final)
hist(echo_final$STROKEVOL4CH,
xlab = "STROKE VOL 4CH", breaks = 50,main = "HISTOGRAM OF STROKE VOL 4CH")
hist(echo_final$STROKEVOL4CH,
xlab = "STROKE VOL 4CH", main = "HISTOGRAM OF STROKE VOL 4CH")
breaks = 50,
hist(echo_final$STROKEVOL4CH,
xlab = "STROKE VOL 4CH", breaks = 50,main = "HISTOGRAM OF STROKE VOL 4CH")
hist(echo_final$STROKEVOL4CH,
xlab = "STROKE VOL 4CH",main = "HISTOGRAM OF STROKE VOL 4CH")
breaks = 50,
hist(echo_final$STROKEVOL4CH,
xlab = "STROKE VOL 4CH", breaks = 50,main = "HISTOGRAM OF STROKE VOL 4CH")
boxplot(echo_final$STROKEVOL4CH, xlab = "END SYSTOLIC VOL BIPLANE", main = "BOXPLOT OF STROKE VOL 4CH")
hist(echo_final$STROKEVOL2CH,
xlab = "STROKE VOL 2CH", breaks = 50,main = "HISTOGRAM OF STROKE VOL 2CH")
hist(echo_final$STROKEVOL2CH,
xlab = "STROKE VOL 2CH",main = "HISTOGRAM OF STROKE VOL 2CH")
hist(echo_final$STROKEVOL2CH,
xlab = "STROKE VOL 2CH", breaks = 50,main = "HISTOGRAM OF STROKE VOL 2CH")
hist(echo_final$STROKEVOL2CH,
xlab = "STROKE VOL 2CH",main = "HISTOGRAM OF STROKE VOL 2CH")
boxplot(echo_final$STROKEVOL2CH, xlab = "END SYSTOLIC VOL BIPLANE", main = "BOXPLOT OF STROKE VOL 2CH")
hist(echo_final$EERATIO,
xlab = "EERATIO",main = "HISTOGRAM OF EERATIO")
boxplot(echo_final$EERATIO, xlab = "EERATIO", main = "BOXPLOT OF EERATIO")
hist(echo_final$STROKEVOLBIPLANE,
xlab = "STROKE VOL BIPLANE",main = "HISTOGRAM OF STROKE VOL BIPLANE")
boxplot(echo_final$STROKEVOLBIPLANE, xlab = "STROKE VOL BIPLANE", main = "BOXPLOT OF STROKE VOL BIPLANE")
table(echo_final$LVEF)
hist(echo_final$LVEF,
xlab = "LVEF",main = "HISTOGRAM OF LVEF")
boxplot(echo_final$LVEF, xlab = "LVEF", main = "BOXPLOT OF LVEF")
range(echo_final$LVEF)
summary(echo_final)
View(echo_final)
head(echo_final)
View(echo)
shiny::runApp('~/Documents/PenVarViz')
runApp('~/Documents/PenVarViz')
runApp('~/Documents/PenVarViz')
runApp('~/Documents/PenVarViz')
dim(biome)
dim(bdata)
runApp('~/Documents/PenVarViz')
runApp('~/Documents/PenVarViz')
runApp('~/Documents/PenVar/PenVarViz')
runApp('~/Documents/PenVar/PenVarViz')
runApp()
runApp('~/Documents/PenVar/PenVarViz')
runApp('~/Documents/PenVar/PenVarViz')
runApp('~/Documents/PenVar/PenVarViz')
runApp('~/Documents/PenVar/PenVarViz')
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
runApp()
runApp()
runApp()
x <- read_excel("data/biome_pen_manual_na-rm_10012020.xlsx")
colnames(x)
runApp('~/Documents/PenVarViz_try/PenVarViz_try')
runApp('~/Documents/PenVarViz_try/PenVarViz_try')
unique(x$Gene)
runApp('~/Documents/PenVarViz_try/PenVarViz_try')
runApp('~/Documents/PenVarViz_try/PenVarViz_try')
runApp('~/Documents/PenVarViz_try/PenVarViz_try')
shiny::runApp()
runApp()
runApp()
runApp()
update.packages("shiny")
packageVersion("shiny")
install.packages("shiny")
install.packages("shiny")
packageVersion("shiny")
update.packages("shiny")
shiny::runApp()
x <- read_excel("data/biome_pen_manual_na-rm_10012020.xlsx")
str(x)
runApp()
colnames(x)
str(x)
str(as.numeric(x[,c(17:105)]))
x[,c(17:105)] <- as.numeric(x[,c(17:105)])
table(x$`70yo_Hispanic_Penetrance`)
table(x$Consequence)
table(x$Summary)
table(x$Classification)
table(x$Review_Status)
table(x$All_Ancestries_Carriers_with_Disease)
colnames(x)
y <- read_excel("data/ukb_pen_manual_na-rm_10012020.xlsx")
colnames(y[,c(1:10)])
colnames(x[,c(1:10)])
runApp()
shiny::runApp()
runApp()
shiny::runApp()
